- wishlist for the XINERAMA support:  (like feh does it)
  + fullscreen mode: unused screens shouldn't go black
     see patch by Tim Connors (mercurial branch "fullscreen-window")
  + ungrab mouse and keyboard in unused screens


- magnifying glass: [lc]
  + if the image is smaller than the magnifying window
     then it is stretched - would (black) borders be better?

  + doesn't work in fullscreen mode

  + the key sequence '<ff' (i.e. go to fullscreen and back) sometimes
    leaves it in a bad state

  + problem with manual window placement: (e.g. fvwm: "ManualPlacement")
    whenever the mouse leaves and reenters the qiv window the magnifying
    window has to be placed again.  And what's even worse: this sometimes
    leads to the mouse leaving the window so that you're stuck in an
    annoying loop which is hard to get out of.
   Possibly a solution: geometry hints should override windowmanager placement
   Or: leave the magnifying window in a specific place (even when the mouse
       leaves the image window) instead of moving it around
   quick workaround in fvwm:
          Style "qiv" MinOverlapPlacement


- preloading of images (suggestion by Tony Cebzanov)
 Sometimes I view my photos over a slow sshfs link, and it would be
 handy if, while an image is being displayed, the next image was being
 loaded in the background, so that when I hit the spacebar to advance,
 it renders immediately, instead of having to go out to the disk.
 This would be doing something useful with the idle time while users
 are viewing images, and is a feature I've seen in other viewers.

 Obviously, this would only help out users who are viewing images in
 order, and wouldn't work if they're using any of the PgDn, jt[n],
 jf[n] shortcuts.  But for the most common case, I think it would be a
 very nice performance optimization.

- option to exit slideshow after showing all images
 Such an option would allow the following:

 | while true ; do
 |  qiv -s --exit-on-endofslideshow -u mypictures/
 | done

 This wrapper would recognize added images.

- use nifty new features of imlib2 (compared to imlib1)
 I am sure there are lots!  :-)

